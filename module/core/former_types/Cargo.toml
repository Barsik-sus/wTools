[package]
name = "former_types"
version = "2.0.0"
edition = "2021"
authors = [
  "Kostiantyn Wandalen <wandalen@obox.systems>",
]
license = "MIT"
readme = "Readme.md"
documentation = "https://docs.rs/former"
repository = "https://github.com/Wandalen/wTools/tree/master/module/core/former"
homepage = "https://github.com/Wandalen/wTools/tree/master/module/core/former"
description = """
A flexible and extensible implementation of the builder pattern. Its compile-time structures and traits that are not generated but reused.
"""
categories = [ "algorithms", "development-tools" ]
keywords = [ "fundamental", "general-purpose", "builder-pattern" ]

[lints]
workspace = true

[package.metadata.docs.rs]
features = [ "full" ]
all-features = false

[features]

no_std = [ "collection_tools/no_std" ]
use_alloc = [ "no_std", "collection_tools/use_alloc" ]

default = [
  "enabled",
  "derive_former",
  "derive_components",
  "derive_component_from",
  "derive_component_assign",
  "derive_components_assign",
  "derive_from_components",
]
full = [
  "enabled",
  "derive_former",
  "derive_components",
  "derive_component_from",
  "derive_component_assign",
  "derive_components_assign",
  "derive_from_components",
]
enabled = [ "collection_tools/enabled" ]

derive_former = []
derive_components = []
derive_component_assign = [ "derive_components" ]
derive_components_assign = [ "derive_components", "derive_component_assign" ]
derive_component_from = [ "derive_components" ]
derive_from_components = [ "derive_components" ]


[dependencies]
collection_tools = { workspace = true, features = [ "collection_constructors", "reexports" ] }
# qqq : optimize also make sure collection_tools expose enough features

[dev-dependencies]
test_tools = { workspace = true, features = [ "full" ] }
